'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4200
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="SQL2008SamplesDB")>  _
Partial Public Class DataClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SQL2008SamplesDBConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Members() As System.Data.Linq.Table(Of Member)
		Get
			Return Me.GetTable(Of Member)
		End Get
	End Property
	
	Public ReadOnly Property CCTitleCategories() As System.Data.Linq.Table(Of CCTitleCategory)
		Get
			Return Me.GetTable(Of CCTitleCategory)
		End Get
	End Property
End Class

<Table(Name:="tblMember")>  _
Partial Public Class Member
	
	Private _MemberRecordId As String
	
	Private _FullName As String
	
	Private _MemberUserId As String
	
	Private _MemberPassword As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Column(Storage:="_MemberRecordId", CanBeNull:=false)>  _
	Public Property MemberRecordId() As String
		Get
			Return Me._MemberRecordId
		End Get
		Set
			If (String.Equals(Me._MemberRecordId, value) = false) Then
				Me._MemberRecordId = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_FullName", CanBeNull:=false)>  _
	Public Property FullName() As String
		Get
			Return Me._FullName
		End Get
		Set
			If (String.Equals(Me._FullName, value) = false) Then
				Me._FullName = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_MemberUserId", CanBeNull:=false)>  _
	Public Property MemberUserId() As String
		Get
			Return Me._MemberUserId
		End Get
		Set
			If (String.Equals(Me._MemberUserId, value) = false) Then
				Me._MemberUserId = value
			End If
		End Set
	End Property
	
	<Column(Storage:="_MemberPassword", CanBeNull:=false)>  _
	Public Property MemberPassword() As String
		Get
			Return Me._MemberPassword
		End Get
		Set
			If (String.Equals(Me._MemberPassword, value) = false) Then
				Me._MemberPassword = value
			End If
		End Set
	End Property
End Class

<Table(Name:="tblDVDTitle")>  _
Partial Public Class CCTitleCategory
	
	Private _CategoryId As String
	
	Private _CategoryName As String
	
	Private _CategoryDesc As String
	
	Private _Year As String
	
	Private _Minute As String
	
	Private _RatingCode As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Column(Name:="intDVDTitleIdDV", Storage:="_CategoryId", CanBeNull:=false)>  _
	Public Property DVDTitleId() As String
		Get
			Return Me._CategoryId
		End Get
		Set
			If (String.Equals(Me._CategoryId, value) = false) Then
				Me._CategoryId = value
			End If
		End Set
	End Property
	
	<Column(Name:="strTitleDV", Storage:="_CategoryName", CanBeNull:=false)>  _
	Public Property Title() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Column(Name:="strDescriptionDV", Storage:="_CategoryDesc", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._CategoryDesc
		End Get
		Set
			If (String.Equals(Me._CategoryDesc, value) = false) Then
				Me._CategoryDesc = value
			End If
		End Set
	End Property
	
	<Column(Name:="strYearDV", Storage:="_Year", CanBeNull:=false)>  _
	Public Property Year() As String
		Get
			Return Me._Year
		End Get
		Set
			If (String.Equals(Me._Year, value) = false) Then
				Me._Year = value
			End If
		End Set
	End Property
	
	<Column(Name:="intMinuteDV", Storage:="_Minute", CanBeNull:=false)>  _
	Public Property Minute() As String
		Get
			Return Me._Minute
		End Get
		Set
			If (String.Equals(Me._Minute, value) = false) Then
				Me._Minute = value
			End If
		End Set
	End Property
	
	<Column(Name:="strRatingCodeDv", Storage:="_RatingCode", CanBeNull:=false)>  _
	Public Property RatingCode() As String
		Get
			Return Me._RatingCode
		End Get
		Set
			If (String.Equals(Me._RatingCode, value) = false) Then
				Me._RatingCode = value
			End If
		End Set
	End Property
End Class
